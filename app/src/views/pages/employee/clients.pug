extends ../../layouts/admin.pug

block content
  .clients-page
    .page-header
      h1 Clients Management
      .search-container
        label(for="searchInput") Поиск клиентов:
        input#searchInput(type="text" placeholder="Поиск по имени, username, email...")

    if clients.length > 0
      .clients-container
        .clients-list
          table.clients-table
            thead
              tr
                th ID
                th Username
                th Email
                th Name
                th Действия
            tbody
              each client in clients
                tr(data-clientid=client.userid data-name=client.name data-username=client.username data-email=client.email)
                  td= client.userid
                  td= client.username
                  td= client.email
                  td= client.name
                  td
                    button.view-btn(data-clientid=client.userid) View
                    button.edit-btn(data-clientid=client.userid) Edit

        .client-details#clientDetails
          .details-header
            h2 Client Details
            button.close-btn ×
          .details-content
            .detail-item
              span.label ID:
              span.value#detailId -
            .detail-item
              span.label Name:
              span.value#detailName -
            .detail-item
              span.label Username:
              span.value#detailUsername -
            .detail-item
              span.label Email:
              span.value#detailEmail -
            .detail-item
              span.label Phone:
              span.value#detailPhone -
            .detail-item
              span.label Role:
              span.value#detailRole Client
          
          .pets-section
            h3 Pets
            .pets-list#petsList
              p No pets found
    else
      .no-clients
        p No clients found

block scripts
  script.
    const BACKEND_URL = '!{backEndUrl}';
    let allClients = [];
    
    document.addEventListener('DOMContentLoaded', function() {
      // Сохраняем всех клиентов для поиска
      const rows = document.querySelectorAll('.clients-table tbody tr');
      allClients = Array.from(rows).map(row => ({
        element: row,
        clientid: row.getAttribute('data-clientid'),
        name: row.getAttribute('data-name') || '',
        username: row.getAttribute('data-username') || '',
        email: row.getAttribute('data-email') || ''
      }));

      // Обработчик события для поиска
      document.getElementById('searchInput')?.addEventListener('input', applySearch);

      document.getElementById('addClientBtn')?.addEventListener('click', showAddClientModal);

      document.querySelector('.clients-list')?.addEventListener('click', function(e) {
        if (e.target.classList.contains('view-btn')) {
          const clientId = e.target.getAttribute('data-clientid');
          fetchClientDetails(clientId);
        }
        if (e.target.classList.contains('edit-btn')) {
          const clientId = e.target.getAttribute('data-clientid');
          showEditClientModal(clientId);
        }
      });

      document.querySelector('.close-btn')?.addEventListener('click', function() {
        document.getElementById('clientDetails')?.classList.remove('active');
      });

      function applySearch() {
        const searchTerm = document.getElementById('searchInput').value.toLowerCase().trim();

        let filteredClients = allClients.filter(client => {
          // Поиск по имени, username, email
          const matchesSearch = !searchTerm || 
            client.name.toLowerCase().includes(searchTerm) ||
            client.username.toLowerCase().includes(searchTerm) ||
            client.email.toLowerCase().includes(searchTerm);

          return matchesSearch;
        });

        // Показываем/скрываем строки
        allClients.forEach(client => {
          const shouldShow = filteredClients.includes(client);
          client.element.style.display = shouldShow ? '' : 'none';
        });

        // Показываем сообщение если ничего не найдено
        const tbody = document.querySelector('.clients-table tbody');
        const noResultsRow = tbody.querySelector('.no-results-row');
        
        if (filteredClients.length === 0) {
          if (!noResultsRow) {
            const emptyRow = document.createElement('tr');
            emptyRow.className = 'no-results-row';
            emptyRow.innerHTML = '<td colspan="5" style="text-align: center; padding: 20px; color: #666;">Клиенты не найдены</td>';
            tbody.appendChild(emptyRow);
          }
        } else {
          if (noResultsRow) {
            noResultsRow.remove();
          }
        }
      }

      function showAddClientModal(e) {
        e.preventDefault();
        alert('TO DO');
      }

      function showEditClientModal(clientId) {
        alert('TO DO');
      }

      async function fetchClientDetails(clientId) {
        try {
          const response = await fetch(`${BACKEND_URL}/employee/clients/${clientId}`, {
            method: 'GET',
            credentials: 'include'
        });
          if (!response.ok) throw new Error('Client not found');
          
          const clientData = await response.json();
          updateClientDetails(clientData.client);
          renderPets(clientData.pets);
          
        } catch (error) {
          console.error('Error fetching client details:', error);
          alert('Error loading client details');
        }
      }

      function updateClientDetails(clientData) {
        document.getElementById('detailId').textContent = clientData.userid;
        document.getElementById('detailName').textContent = clientData.name || 'N/A';
        document.getElementById('detailUsername').textContent = clientData.username;
        document.getElementById('detailEmail').textContent = clientData.email;
        document.getElementById('detailPhone').textContent = clientData.phoneNumber || 'N/A';
        document.getElementById('detailRole').textContent = clientData.role;
        
        document.getElementById('clientDetails').classList.add('active');
      }

      function renderPets(pets) {
        const petsList = document.getElementById('petsList');
        if (pets.length > 0) {
          petsList.innerHTML = pets.map(pet => `
            <div class="pet-item">
              <h4 id=${pet.petId}>${pet.name}</h4>
              <p>${pet.type || 'Unknown type'}</p>
              <p>${pet.breed || 'Unknown breed'}</p>
              <p>Age: ${pet.age || 'Unknown'}</p>
              <p>Gender: ${pet.gender || 'Unknown'}</p>
              <p>Medical history: ${pet.medicalhistory || 'Unknown'}</p>
            </div>
          `).join('');
        } else {
          petsList.innerHTML = '<p>No pets found</p>';
        }
      }
    });