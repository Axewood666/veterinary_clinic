extends ../../layouts/admin.pug

block content
  .vets-page
    .page-header
      h1 Ветеринары
      button.add-vet-btn#addVetBtn Добавить ветеринара

    if vets.length > 0
      .vets-container
        .vets-list
          table.vets-table
            thead
              tr
                th ID
                th Имя
                th Email
                th Телефон
                th Специализация
                th Статус
                th Действия
            tbody
              each vet in vets
                tr(data-vetid=vet.userid)
                  td= vet.userid
                  td= vet.name
                  td= vet.email
                  td= vet.phoneNumber
                  td= vet.specialization
                  td= vet.isActive ? 'Активен' : 'Неактивен'
                  td
                    button.view-btn(data-vetid=vet.userid) Просмотр
                    button.edit-btn(data-vetid=vet.userid) Редактировать
                    button.toggle-status-btn(data-vetid=vet.userid)= vet.isActive ? 'Деактивировать' : 'Активировать'

        .vet-details#vetDetails
          .details-header
            h2 Информация о ветеринаре
            button.close-btn ×
          .details-content
            .detail-item
              span.label ID:
              span.value#detailId -
            .detail-item
              span.label Имя:
              span.value#detailName -
            .detail-item
              span.label Email:
              span.value#detailEmail -
            .detail-item
              span.label Телефон:
              span.value#detailPhone -
            .detail-item
              span.label Специализация:
              span.value#detailSpecialization -
            .detail-item
              span.label Статус:
              span.value#detailStatus -
          
          .appointments-section
            h3 Приемы
            .appointments-list#appointmentsList
              p Нет приемов

    else
      .no-vets
        p Ветеринары не найдены

block scripts
  script.
    const BACKEND_URL = '!{backEndUrl}';
    
    document.addEventListener('DOMContentLoaded', function() {
      document.getElementById('addVetBtn')?.addEventListener('click', showAddVetModal);
      
      document.querySelector('.vets-list')?.addEventListener('click', function(e) {
        if (e.target.classList.contains('view-btn')) {
          const vetId = e.target.getAttribute('data-vetid');
          fetchVetDetails(vetId);
        }
        if (e.target.classList.contains('edit-btn')) {
          const vetId = e.target.getAttribute('data-vetid');
          showEditVetModal(vetId);
        }
        if (e.target.classList.contains('toggle-status-btn')) {
          const vetId = e.target.getAttribute('data-vetid');
          toggleVetStatus(vetId);
        }
      });

      document.querySelector('.close-btn')?.addEventListener('click', function() {
        document.getElementById('vetDetails')?.classList.remove('active');
      });

      async function fetchVetDetails(vetId) {
        try {
          const response = await fetch(`${BACKEND_URL}/api/vets/${vetId}`, {
            method: 'GET',
            credentials: 'include'
          });
          if (!response.ok) throw new Error('Ветеринар не найден');
          
          const vetData = await response.json();
          updateVetDetails(vetData);
          await fetchVetAppointments(vetId);
          
        } catch (error) {
          console.error('Ошибка при получении данных ветеринара:', error);
          alert('Ошибка при загрузке данных ветеринара');
        }
      }

      function updateVetDetails(vetData) {
        document.getElementById('detailId').textContent = vetData.userid;
        document.getElementById('detailName').textContent = vetData.name;
        document.getElementById('detailEmail').textContent = vetData.email;
        document.getElementById('detailPhone').textContent = vetData.phoneNumber || 'Н/Д';
        document.getElementById('detailSpecialization').textContent = vetData.specialization || 'Н/Д';
        document.getElementById('detailStatus').textContent = vetData.isActive ? 'Активен' : 'Неактивен';
        
        document.getElementById('vetDetails').classList.add('active');
      }

      async function fetchVetAppointments(vetId) {
        try {
          const appointmentsList = document.getElementById('appointmentsList');
          appointmentsList.innerHTML = '<p>Загрузка приемов...</p>';
          
          const response = await fetch(`${BACKEND_URL}/api/vets/${vetId}/appointments`, {
            method: 'GET',
            credentials: 'include'
          });
          if (!response.ok) throw new Error('Не удалось загрузить приемы');
          
          const appointments = await response.json();
          renderAppointments(appointments);
          
        } catch (error) {
          console.error('Ошибка при получении приемов:', error);
          appointmentsList.innerHTML = '<p>Ошибка при загрузке приемов</p>';
        }
      }

      function renderAppointments(appointments) {
        const appointmentsList = document.getElementById('appointmentsList');
        if (appointments.length > 0) {
          appointmentsList.innerHTML = appointments.map(appointment => `
            <div class="appointment-item">
              <h4>Прием #${appointment.appointmentId}</h4>
              <p>Дата: ${new Date(appointment.date).toLocaleDateString()}</p>
              <p>Время: ${appointment.time}</p>
              <p>Клиент: ${appointment.clientName}</p>
              <p>Питомец: ${appointment.petName}</p>
              <p>Статус: ${appointment.status}</p>
            </div>
          `).join('');
        } else {
          appointmentsList.innerHTML = '<p>Нет приемов</p>';
        }
      }

      async function toggleVetStatus(vetId) {
        try {
          const response = await fetch(`${BACKEND_URL}/api/vets/${vetId}/toggle-status`, {
            method: 'POST',
            credentials: 'include'
          });
          if (!response.ok) throw new Error('Не удалось изменить статус');
          
          const result = await response.json();
          if (result.success) {
            location.reload();
          }
        } catch (error) {
          console.error('Ошибка при изменении статуса:', error);
          alert('Ошибка при изменении статуса ветеринара');
        }
      }

      function showAddVetModal() {
        // TODO: Реализовать модальное окно добавления ветеринара
        alert('Форма добавления ветеринара будет реализована здесь');
      }

      function showEditVetModal(vetId) {
        // TODO: Реализовать модальное окно редактирования ветеринара
        alert('Форма редактирования ветеринара будет реализована здесь');
      }
    }); 